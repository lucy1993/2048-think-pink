{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["classedNumb","2","4","8","16","32","64","128","256","512","1024","2048","App","initPageRef","useRef","useState","keyState","setKeyState","gameState","setGameState","scoreState","setScoreState","data","setData","handleNewGame","useEffect","initKeys","current","focus","addRandomNumber","changeCurrentData","randomParent","Math","floor","random","randomChild","twoOrFour","ArrowKeysReact","config","left","handleArrows","right","up","down","handleOrderArray","modData","side","newData","noM","forEach","row","newRow","col","push","length","Array","fill","concat","sumData","map","colIndex","innerRow","handleSum","handleCheckSteps","noStep","handleReverseArray","rowIndex","cilIndex","eventSide","mainData","newOrder","changedOrder","className","ref","events","tabIndex","onClick","indexRow","classAnm","setTimeout","rowAnimDir","indexCol","style","animationDelay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb6067b5.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport ArrowKeysReact from 'arrow-keys-react';\nimport './App.css';\n\nconst classedNumb = {\n  2: 'two',\n  4: 'four',\n  8: 'eight',\n  16: 'sixteen',\n  32: 'thirty-two',\n  64: 'sixty-four',\n  128: 'h-t-e',\n  256: 't-f-s',\n  512: 'f-o-t',\n  1024: 'o-z-t-f',\n  2048: 't-z-f-e'\n}\n\nfunction App() {\n  const initPageRef = useRef();\n  const [keyState, setKeyState] = useState(null);\n  const [gameState, setGameState] = useState(null);\n  const [scoreState, setScoreState] = useState(0);\n\n  const [data, setData] = useState([\n    [0,0,0,0], \n    [0,0,0,0], \n    [0,0,0,0], \n    [0,0,0,2]\n  ]);\n\n  const handleNewGame = () => {\n    setGameState('new')\n    setScoreState(0)\n    setData([\n      [0,0,0,0], \n      [2,0,0,0], \n      [0,0,0,0], \n      [0,0,0,2]\n    ])\n  }\n\n  useEffect(() => {\n    initKeys();\n    initPageRef.current.focus();\n  });\n\n  useEffect(() => {\n    setData(addRandomNumber())\n  }, [keyState]);\n\n  const addRandomNumber = () => {\n    const changeCurrentData = [...data];\n    if (gameState !== 'lost') {\n      const randomParent = Math.floor(Math.random() * 4)\n      const randomChild = Math.floor(Math.random() * 4)\n      const twoOrFour = Math.floor(Math.random() * 6) + 1  < 4 ? 2 : 4\n  \n  \n      if(changeCurrentData[randomParent][randomChild]) {\n        return addRandomNumber()\n      } else {\n         changeCurrentData[randomParent][randomChild] = twoOrFour;\n      }\n    }\n    return changeCurrentData\n  }\n\n  const initKeys = () => {\n    ArrowKeysReact.config({\n      left: () => {\n        handleArrows('left')\n      },\n      right: () => {\n        handleArrows('right')\n      },\n      up: () => {\n        handleArrows('up')\n      },\n      down: () => {\n        handleArrows('down')\n      }\n    });\n  }\n\n  const handleSum = (modData, side) => {\n    let newData = []\n    modData.forEach(row => {\n      let newRow = []\n      row.map((col, colIndex) => {\n        let innerRow = row\n        if(col) {\n          if(col === innerRow[colIndex+1]) {\n            innerRow[colIndex+1] = 0\n            newRow.push(col+col)\n            setScoreState(scoreState + col + col)\n          } else newRow.push(col)\n        }\n        return innerRow\n      })\n      if(side === 'right') {\n        newData.push(new Array(4-newRow.length).fill(0).concat(newRow))\n      } else newData.push(newRow.concat(new Array(4-newRow.length).fill(0)))\n    })\n    return newData\n  }\n\n  const handleOrderArray = (modData, side) => {\n\n    let newData = []\n    let noM = 0\n    modData.forEach(row => {\n      let newRow = []\n      row.forEach(col => {\n        if(col) newRow.push(col)\n      })\n      if(newRow.length === 4) noM++\n      if(side === 'right') {\n        newData.push(new Array(4-newRow.length).fill(0).concat(newRow))\n      } else newData.push(newRow.concat(new Array(4-newRow.length).fill(0)))\n     \n    })\n\n    const sumData = handleSum(newData, side)\n    if(noM !== 4) {\n      return sumData\n    } else {\n      if(!handleCheckSteps(data)) {\n        setGameState('lost');\n      }\n      return sumData\n    }\n  }\n\n  const handleCheckSteps = (modData) => {\n    let noStep = false\n    modData.forEach(row => {\n      row.map((col, colIndex) => {\n        let innerRow = row\n        if(col) {\n          if(col === innerRow[colIndex+1]) {\n            noStep = true\n          } \n        }\n      })\n    })\n    return noStep\n  }\n\n  const handleReverseArray = (modData) => {\n    let newData = []\n    data.forEach((row, rowIndex) => {\n      let newRow = []\n      row.forEach((col, cilIndex) => {\n        newRow.push(modData[cilIndex][rowIndex]);\n      })\n      newData.push(newRow)\n    })\n\n    return newData\n  }\n\n  const handleArrows = (eventSide) => {\n    let mainData = null\n    if(eventSide === 'left') {\n      mainData = handleOrderArray(data, eventSide)\n    }\n\n    if(eventSide === 'right') {\n      mainData = handleOrderArray(data, eventSide)\n    }\n\n    if(eventSide === 'up') {\n      let newOrder = handleReverseArray(data)\n      let changedOrder = handleOrderArray(newOrder, eventSide)\n      mainData = handleReverseArray(changedOrder)\n    }\n\n    if(eventSide === 'down') {\n      let newOrder = handleReverseArray(data)\n      let changedOrder = handleOrderArray(newOrder, 'right')\n      mainData = handleReverseArray(changedOrder)\n    }\n\n    if(mainData) setData(mainData)\n    setKeyState(eventSide)\n  }\n\n  return (\n    <div \n      className=\"App\"\n      ref={initPageRef}\n      {...ArrowKeysReact.events} tabIndex=\"1\"\n    >\n      <div className='big-box'>\n        <div className='box-header'>\n          <div \n            className='new-game-btn'\n            onClick={handleNewGame}\n          > new game </div>\n          <div className='new-score-btn'> score: {scoreState} </div>\n        </div>\n        <div className='small-box'>\n          {gameState === 'lost' ? <div className='pop-up-message'>\n            <h1 className='message-text'> game over! </h1>\n            <div \n              className='new-game-btn'\n              onClick={handleNewGame}\n            > try again </div>\n          </div> : null}\n          {\n            data && data.length ? data.map((row, indexRow) => {\n              let classAnm = 'swipeAnimation';\n              setTimeout(() => classAnm = ' ', 0);\n              let rowAnimDir = indexRow;\n              if(keyState === 'up') {\n                rowAnimDir = 4-indexRow\n              }\n              return <div\n              className={`row`} > {\n              row.map((col, indexCol) => {\n                if(keyState === 'right') {\n                  rowAnimDir = indexCol\n                } else if(keyState === 'left') {\n                  rowAnimDir = 4 - indexCol\n                }\n                return <div \n                style={{ animationDelay: `0.${rowAnimDir-1}s` }}\n                key={Math.random()}\n                className={`${col ? null : classAnm} box ${col ? classedNumb[col] : ''}`}> {col || null} \n              </div>\n              })\n            } </div>\n            })\n          : null\n          }\n        </div>\n        <div className='intro-text'> please use your arrow keys to navigate </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}